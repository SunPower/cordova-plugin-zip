####
# Quick version of build workflow
#
# 1. Webapp application energylink-connect2-app
#    - test
#    - build
# 2. Android application (BUILD_TYPE=debug, APP_ENV=test)
#    - build with code signing
#    - store APK file as a build artifact
on: pull_request
jobs:
  build:
    # Run Quick Builds on Ubuntu 18.04 (Linux) instead of MacOS
    # because MacOS builds are 10x more expensive (minute multiplier is 10)
    # https://help.github.com/en/github/setting-up-and-managing-billing-and-payments-on-github/about-billing-for-github-actions#about-billing-for-github-actions
    runs-on: ubuntu-18.04
    timeout-minutes: 20
    env:
      APP_ENV: test
      BUILD_TYPE: debug
    steps:
      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "UTC-8"
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
      - run: |
          ls /usr/local/lib/android/sdk/tools/bin
          /usr/local/lib/android/sdk/tools/bin/sdkmanager --uninstall "build-tools;31.0.0"
      - run: .github/workflows/setup_environment.sh
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Restore cached webapp node_modules folder
        id: webapp-node-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-webapp-nm-folder
        with:
          path: |
            energylink-connect2-app/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('energylink-connect2-app/package-lock.json') }}

      - name: Install Dependencies
        if: steps.webapp-node-modules.outputs.cache-hit != 'true'
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        working-directory: energylink-connect2-app

      - run: npm run validate-env-files
        env:
          CM2_ENVFILE_PASSWORD: ${{ secrets.ENVFILE_PASSWORD }}
        working-directory: energylink-connect2-app

      - run: npm run test
        env:
          CI: 1
        working-directory: energylink-connect2-app

      - name: Decrypt and create .env file
        run: openssl enc -aes256 -d -base64 -md md5 -pass pass:'${{ secrets.ENVFILE_PASSWORD }}' -in .env.enc.${APP_ENV} -out .env
        working-directory: energylink-connect2-app

      - name: See if any file changed
        run: git status

      - run: npm run build
        working-directory: energylink-connect2-app

      - name: Set the application environment to ${{ env.APP_ENV }}
        run: |
          sed -i"" -E "s/com.sunpower.energylink.commissioning2.test/${APP_ID}/g" config.xml
          sed -i"" -E "s/SunPowerProConnect-dev/${APP_NAME}/" config.xml

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install RubyGems
        run: bundle install --jobs 4 --retry 3

      - name: Install Cordova NPM packages
        run: |
          git config --global url."https://${{ secrets.ACCESS_TOKEN }}@github.com/".insteadOf ssh://git@github.com/
          npm install

      - name: Set credentials to Google Play store
        run: |
          echo "${{ secrets.GOOGLE_PLAY_UPLOAD_KEYSTORE }}" | base64 -d > upload-keystore.jks
          echo "${{ secrets.GOOGLE_PLAY_API_KEY }}" | base64 -d > google-api.json

      - name: Build Android Application
        run: |
          bundle exec fastlane android build
        env:
          KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_PLAY_UPLOAD_KEYSTORE_PASSWORD }}

      - uses: actions/upload-artifact@v1
        with:
          name: Android-${{ env.APP_ENV }}
          path: ${{ env.CORDOVA_ANDROID_RELEASE_BUILD_PATH }}
