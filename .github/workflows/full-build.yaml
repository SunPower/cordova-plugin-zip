####
# Full version of build workflow
#
# This is a full version of build workflow for build and release:
# - test and build native application
# - build and store as build artifacts Android and iOS Application
# - for releases (git tag) upload a build artifact to Google Play and Apple TestFlight
# - send slack notification
on:
  push:
    branches:
      - master
    tags:
      - "*"

jobs:
  build:
    runs-on: macos-10.15
    strategy:
      matrix:
        app_env: [dev, test, training, prod]
        include:
          - app_env: dev
            app_id: com.sunpower.energylink.commissioning2.dev
            app_name: EnergylinkConnect2-dev
            release_track: beta
          - app_env: test
            app_id: com.sunpower.energylink.commissioning2.test
            app_name: EnergylinkConnect2-test
            release_track: beta
          - app_env: training
            app_id: com.sunpower.energylink.commissioning2.training
            app_name: EnergylinkConnect2-training
            release_track: beta
          - app_env: prod
            app_id: com.sunpower.energylink.commissioning2
            app_name: EnergylinkConnect2
            release_track: alpha
    env:
      APP_ENV: ${{ matrix.app_env }}
      APP_ID: ${{ matrix.app_id }}
      APP_NAME: ${{ matrix.app_name }}
      RELEASE_TRACK: ${{ matrix.release_track }}
    steps:
      - uses: actions/checkout@v2
      - name: Set Application environment to ${{ matrix.app_env }}
        run: |
          sed -i"" -E "s/com.sunpower.energylink.commissioning2.dev/${{ matrix.app_id }}/" config.xml
          sed -i"" -E "s/EnergylinkConnect2-dev/${{ matrix.app_name }}/" config.xml

      - uses: actions/setup-node@v1
        with:
          node-version: "10.15.3"
          registry-url: "https://registry.npmjs.org"
      #
      # Native Application
      #
      - run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        working-directory: energylink-connect2-app
      - run: npm run test
        env:
          CI: 1
        working-directory: energylink-connect2-app
      - name: Set and decrypt .env
        run: |
          cp .env.enc.${{ matrix.app_env }} .env.enc
          openssl enc -aes256 -d -base64 -md md5 -pass pass:'${{ secrets.ENVFILE_PASSWORD }}' -in .env.enc -out .env
        working-directory: energylink-connect2-app
      - run: npm run build
        working-directory: energylink-connect2-app
      #
      # Configure environment for iOS and Android
      #
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.7"
      - name: Install RubyGems
        run: bundle install --jobs 4 --retry 3
      - name: Install Cordova
        run: |
          npm install
          npm install -g cordova@9.0.0
      #
      # iOS Application
      #
      - name: Build iOS Application
        run: |
          npx phonegap prepare ios
          bundle exec fastlane ios build
        env:
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      - uses: actions/upload-artifact@v1
        with:
          name: iOS-${{ matrix.app_env }}
          path: platforms/ios/build/device/${{ matrix.app_name }}.ipa
      - name: Upload build to Apple TestFlight
        run: bundle exec fastlane ios release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      #
      # Android Application
      #
      - name: Configure credentials
        run: |
          echo "${{ secrets.GOOGLE_PLAY_UPLOAD_KEYSTORE }}" | base64 -d > upload-keystore.jks
          echo "${{ secrets.GOOGLE_PLAY_API_KEY }}" | base64 -d > google-api.json
      - name: Build Android Application
        run: |
          npx phonegap prepare android
          bundle exec fastlane android build
        env:
          KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_PLAY_UPLOAD_KEYSTORE_PASSWORD }}
      - uses: actions/upload-artifact@v1
        with:
          name: Android-${{ matrix.app_env }}
          path: platforms/android/app/build/outputs/apk/release/app-release.apk
      #
      # Release Android and iOS Application
      #
      - name: Upload build to Google Play store
        run: bundle exec fastlane android release
        if: startsWith(github.ref, 'refs/tags/')
      #
      # Slack Notification (run once, only for prod environment)
      #
      - name: Calculate GIT branch name
        run: |
          export BRANCH_NAME=${GITHUB_REF#refs/heads/}
          export BRANCH_NAME=${BRANCH_NAME#refs/tags/}
          echo "::set-env name=BRANCH_NAME::$BRANCH_NAME"
      - name: Send slack notification
        uses: hbfernandes/slack-action@1.0
        if: matrix.app_env == 'prod'
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        with:
          args: |
            {
              "channel": "cm2-builds",
              "text": "New release is available",
              "as_user": true,
              "attachments": [{
                "color": "good",
                "fields": [{
                    "title": "Revision",
                    "value": "${{ env.BRANCH_NAME }}",
                    "short": true
                  },
                  {
                    "title": "Build Artifacts",
                    "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Open>",
                    "short": true
                  }
                ]
              }]
            }
