// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ESSDeviceMapping component renders correctly 1`] = `
Object {
  "component": <BrowserRouter
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Provider
        store={
          Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
        }
      >
        <DeviceMapping
          history={
            Object {
              "block": [MockFunction] {
                "calls": Array [
                  Array [
                    [Function],
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
            }
          }
        >
          <section
            className="ess-device-mapping is-flex tile is-vertical has-text-weight-bold pt-0 pr-10 pl-10 full-height"
          >
            <h1
              className="has-text-centered is-uppercase pb-20"
            >
              DEVICE_MAPPING
            </h1>
            <div
              className="main-container"
            >
              <div
                className="pt-20 pb-20"
              >
                <div
                  className="inline-loader"
                >
                  <div
                    className="ball-scale-ripple"
                  >
                    <div />
                  </div>
                </div>
              </div>
              <div>
                DEVICE_MAPPING_IN_PROGRESS
              </div>
            </div>
            <SwipeableSheet
              onChange={[Function]}
              open={false}
            >
              <SwipeableBottomSheet
                defaultOpen={false}
                fullScreen={false}
                marginTop={0}
                onChange={[Function]}
                open={false}
                overflowHeight={0}
                overlay={true}
                scrollTopAtClose={true}
                shadowTip={true}
                swipeableViewsProps={
                  Object {
                    "className": "swipeable",
                  }
                }
                topShadow={true}
              >
                <div
                  style={
                    Object {
                      "bottom": 0,
                      "height": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                    }
                  }
                >
                  <HeightUpdater
                    height={768}
                    onHeightChange={[Function]}
                  />
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "backgroundColor": "black",
                        "height": 768,
                        "left": 0,
                        "opacity": 0,
                        "pointerEvents": "none",
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "transition": "opacity 450ms",
                      }
                    }
                  />
                  <ReactSwipableView
                    animateHeight={false}
                    animateTransitions={true}
                    axis="y"
                    className="swipeable"
                    containerStyle={
                      Object {
                        "boxSizing": "border-box",
                      }
                    }
                    disableLazyLoading={false}
                    disabled={false}
                    enableMouseEvents={true}
                    hysteresis={0.6}
                    ignoreNativeScroll={false}
                    index={0}
                    onChangeIndex={[Function]}
                    onTransitionEnd={[Function]}
                    resistance={false}
                    slideStyle={
                      Object {
                        "boxSizing": "border-box",
                        "marginBottom": -0,
                        "overflow": "visible",
                      }
                    }
                    springConfig={
                      Object {
                        "delay": "0s",
                        "duration": "0.35s",
                        "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                      }
                    }
                    style={
                      Object {
                        "boxSizing": "border-box",
                        "overflowY": "initial",
                      }
                    }
                    threshold={5}
                  >
                    <div
                      className="swipeable"
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseMove={[Function]}
                      onMouseUp={[Function]}
                      onScroll={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "overflowY": "initial",
                        }
                      }
                    >
                      <div
                        className="react-swipeable-view-container"
                        style={
                          Object {
                            "WebkitFlexDirection": "column",
                            "WebkitTransition": "all 0s ease 0s",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "display": "flex",
                            "flexDirection": "column",
                            "height": null,
                            "transition": "all 0s ease 0s",
                            "willChange": "transform",
                          }
                        }
                      >
                        <div
                          aria-hidden={false}
                          data-swipeable="true"
                          key=".0"
                          style={
                            Object {
                              "WebkitFlexShrink": 0,
                              "boxSizing": "border-box",
                              "flexShrink": 0,
                              "marginBottom": -0,
                              "overflow": "visible",
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="ReactSwipeableBottomSheet--closed"
                            style={
                              Object {
                                "backgroundColor": "white",
                                "height": "initial",
                                "maxHeight": 768,
                                "overflow": "hidden",
                              }
                            }
                          >
                            <div
                              className="update-in-progress is-flex"
                            >
                              <span
                                className="has-text-weight-bold"
                              >
                                HOLD_ON
                              </span>
                              <span
                                className="mt-10 mb-10"
                              >
                                WAIT_FOR_DM
                              </span>
                              <div
                                className="mt-10 mb-20"
                              >
                                <button
                                  className="button is-primary"
                                  onClick={[Function]}
                                >
                                  CLOSE
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </ReactSwipableView>
                </div>
              </SwipeableBottomSheet>
            </SwipeableSheet>
          </section>
        </DeviceMapping>
      </Provider>
    </Router>
  </BrowserRouter>,
  "store": Object {
    "clearActions": [Function],
    "dispatch": [Function],
    "getActions": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
}
`;
