// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfigureStringInverters component render correctly 1`] = `
<BrowserRouter
  keyLength={0}
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <ConfigureStringInverters>
        <div
          className="fill-parent is-flex tile is-vertical has-text-centered pl-10 pr-10 mb-40"
        >
          <div
            className="header mb-20"
          >
            <span
              className="sp-chevron-left has-text-primary is-size-4 go-back"
              onClick={[Function]}
            />
            <span
              className="is-uppercase has-text-weight-bold  page-title"
            >
              STRING_INVERTERS
            </span>
          </div>
          <div />
          <div
            className="is-flex"
          >
            <button
              className="button is-primary is-outlined is-uppercase is-fullwidth mr-10"
              onClick={[Function]}
            >
              CANCEL
            </button>
            <button
              className="button is-primary is-fullwidth ml-10"
              onClick={[Function]}
            >
              SAVE
            </button>
          </div>
          <WaitingClaimingDevices>
            <SwipeableSheet
              onChange={[Function]}
              open={true}
            >
              <SwipeableBottomSheet
                defaultOpen={false}
                fullScreen={false}
                marginTop={0}
                onChange={[Function]}
                open={true}
                overflowHeight={0}
                overlay={true}
                scrollTopAtClose={true}
                shadowTip={true}
                swipeableViewsProps={
                  Object {
                    "className": "swipeable",
                  }
                }
                topShadow={true}
              >
                <div
                  style={
                    Object {
                      "bottom": 0,
                      "height": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                    }
                  }
                >
                  <HeightUpdater
                    height={768}
                    onHeightChange={[Function]}
                  />
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "backgroundColor": "black",
                        "height": 768,
                        "left": 0,
                        "opacity": 0.54,
                        "pointerEvents": "auto",
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "transition": "opacity 450ms",
                      }
                    }
                  />
                  <ReactSwipableView
                    animateHeight={false}
                    animateTransitions={true}
                    axis="y"
                    className="swipeable"
                    containerStyle={
                      Object {
                        "boxShadow": "rgba(0, 0, 0, 0.156863) 0px -6px 5px",
                        "boxSizing": "border-box",
                      }
                    }
                    disableLazyLoading={false}
                    disabled={false}
                    enableMouseEvents={true}
                    hysteresis={0.6}
                    ignoreNativeScroll={false}
                    index={1}
                    onChangeIndex={[Function]}
                    onTransitionEnd={[Function]}
                    resistance={false}
                    slideStyle={
                      Object {
                        "boxSizing": "border-box",
                        "marginBottom": -0,
                        "overflow": "visible",
                      }
                    }
                    springConfig={
                      Object {
                        "delay": "0s",
                        "duration": "0.35s",
                        "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                      }
                    }
                    style={
                      Object {
                        "boxSizing": "border-box",
                        "overflowY": "initial",
                      }
                    }
                    threshold={5}
                  >
                    <div
                      className="swipeable"
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseMove={[Function]}
                      onMouseUp={[Function]}
                      onScroll={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "overflowY": "initial",
                        }
                      }
                    >
                      <div
                        className="react-swipeable-view-container"
                        style={
                          Object {
                            "WebkitFlexDirection": "column",
                            "WebkitTransition": "-webkit-transform 0.35s cubic-bezier(0.15, 0.3, 0.25, 1) 0s",
                            "boxShadow": "rgba(0, 0, 0, 0.156863) 0px -6px 5px",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "display": "flex",
                            "flexDirection": "column",
                            "height": null,
                            "transition": "transform 0.35s cubic-bezier(0.15, 0.3, 0.25, 1) 0s",
                            "willChange": "transform",
                          }
                        }
                      >
                        <div
                          aria-hidden={false}
                          data-swipeable="true"
                          key=".1"
                          style={
                            Object {
                              "WebkitFlexShrink": 0,
                              "boxSizing": "border-box",
                              "flexShrink": 0,
                              "marginBottom": -0,
                              "overflow": "visible",
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            style={
                              Object {
                                "marginBottom": 0,
                              }
                            }
                          />
                        </div>
                      </div>
                    </div>
                  </ReactSwipableView>
                  <div
                    style={
                      Object {
                        "bottom": -60,
                        "boxShadow": "rgba(0, 0, 0, 0.7) 0px 0px 30px",
                        "height": 60,
                        "left": "-50%",
                        "position": "fixed",
                        "transform": "translateY(50px)",
                        "transition": "transform 450ms",
                        "width": "200%",
                      }
                    }
                  />
                </div>
              </SwipeableBottomSheet>
            </SwipeableSheet>
          </WaitingClaimingDevices>
          <PendingDeviceConfiguration
            close={[Function]}
            open={false}
          >
            <SwipeableSheet
              onChange={[Function]}
              open={false}
            >
              <SwipeableBottomSheet
                defaultOpen={false}
                fullScreen={false}
                marginTop={0}
                onChange={[Function]}
                open={false}
                overflowHeight={0}
                overlay={true}
                scrollTopAtClose={true}
                shadowTip={true}
                swipeableViewsProps={
                  Object {
                    "className": "swipeable",
                  }
                }
                topShadow={true}
              >
                <div
                  style={
                    Object {
                      "bottom": 0,
                      "height": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                    }
                  }
                >
                  <HeightUpdater
                    height={768}
                    onHeightChange={[Function]}
                  />
                  <div
                    onClick={[Function]}
                    style={
                      Object {
                        "backgroundColor": "black",
                        "height": 768,
                        "left": 0,
                        "opacity": 0,
                        "pointerEvents": "none",
                        "position": "fixed",
                        "right": 0,
                        "top": 0,
                        "transition": "opacity 450ms",
                      }
                    }
                  />
                  <ReactSwipableView
                    animateHeight={false}
                    animateTransitions={true}
                    axis="y"
                    className="swipeable"
                    containerStyle={
                      Object {
                        "boxSizing": "border-box",
                      }
                    }
                    disableLazyLoading={false}
                    disabled={false}
                    enableMouseEvents={true}
                    hysteresis={0.6}
                    ignoreNativeScroll={false}
                    index={0}
                    onChangeIndex={[Function]}
                    onTransitionEnd={[Function]}
                    resistance={false}
                    slideStyle={
                      Object {
                        "boxSizing": "border-box",
                        "marginBottom": -0,
                        "overflow": "visible",
                      }
                    }
                    springConfig={
                      Object {
                        "delay": "0s",
                        "duration": "0.35s",
                        "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                      }
                    }
                    style={
                      Object {
                        "boxSizing": "border-box",
                        "overflowY": "initial",
                      }
                    }
                    threshold={5}
                  >
                    <div
                      className="swipeable"
                      onMouseDown={[Function]}
                      onMouseLeave={[Function]}
                      onMouseMove={[Function]}
                      onMouseUp={[Function]}
                      onScroll={[Function]}
                      onTouchEnd={[Function]}
                      onTouchStart={[Function]}
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "overflowY": "initial",
                        }
                      }
                    >
                      <div
                        className="react-swipeable-view-container"
                        style={
                          Object {
                            "WebkitFlexDirection": "column",
                            "WebkitTransition": "all 0s ease 0s",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "display": "flex",
                            "flexDirection": "column",
                            "height": null,
                            "transition": "all 0s ease 0s",
                            "willChange": "transform",
                          }
                        }
                      >
                        <div
                          aria-hidden={false}
                          data-swipeable="true"
                          key=".0"
                          style={
                            Object {
                              "WebkitFlexShrink": 0,
                              "boxSizing": "border-box",
                              "flexShrink": 0,
                              "marginBottom": -0,
                              "overflow": "visible",
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="ReactSwipeableBottomSheet--closed"
                            style={
                              Object {
                                "backgroundColor": "white",
                                "height": "initial",
                                "maxHeight": 768,
                                "overflow": "hidden",
                              }
                            }
                          >
                            <div
                              className="tile is-flex flex-column"
                            >
                              <span
                                className="has-text-centered has-text-white mb-10 has-text-weight-bold"
                              >
                                ATTENTION
                              </span>
                              <span
                                className="has-text-centered has-text-white mt-10 mb-20"
                              >
                                CONFIG_MISSING
                              </span>
                              <button
                                className="button is-primary"
                                onClick={[Function]}
                              >
                                CONTINUE
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </ReactSwipableView>
                </div>
              </SwipeableBottomSheet>
            </SwipeableSheet>
          </PendingDeviceConfiguration>
        </div>
      </ConfigureStringInverters>
    </Provider>
  </Router>
</BrowserRouter>
`;
